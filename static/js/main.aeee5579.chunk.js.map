{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","minLength","visibleGoods","filter","good","length","sort","good1","good2","NONE","ALPABET","localeCompare","LENGTH","Error","reverse","App","state","isStarted","startList","setState","sortAlphabetically","sortByLength","reverseSorting","resetSorting","changeMinLength","event","target","value","this","className","type","classNames","onClick","name","onChange","hidden","selected","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kGAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUF,SAASC,EACPC,EACAC,EACAC,EACAC,GAGA,IAAMC,EAAe,YAAIJ,GAAOK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASJ,KAsB7D,OApBAC,EAAaI,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKJ,EAASc,KACZ,OAAO,EAET,KAAKd,EAASe,QACZ,OAAOH,EAAMI,cAAcH,GAE7B,KAAKb,EAASiB,OACZ,OAAOL,EAAMF,OAASG,EAAMH,OAE9B,QACE,MAAM,IAAIQ,MAAM,4BAIlBb,GACFE,EAAaY,UAGRZ,G,SApCJP,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA+CE,IAAMoB,EAAb,4MACEC,MAAe,CACbC,WAAW,EACXjB,YAAY,EACZD,SAAUJ,EAASc,KACnBR,UAAW,GALf,EAQEiB,UAAY,WACV,EAAKC,SAAS,CAAEF,WAAW,KAT/B,EAYEG,mBAAqB,WACnB,EAAKD,SAAS,CAAEpB,SAAUJ,EAASe,WAbvC,EAgBEW,aAAe,WACb,EAAKF,SAAS,CAAEpB,SAAUJ,EAASiB,UAjBvC,EAoBEU,eAAiB,WACf,EAAKH,UAAS,SAAAH,GAAK,MAAK,CAAEhB,YAAagB,EAAMhB,gBArBjD,EAwBEuB,aAAe,WACb,EAAKJ,SAAS,CAAEnB,YAAY,EAAOD,SAAUJ,EAASc,KAAMR,UAAW,KAzB3E,EA4BEuB,gBAAkB,SAACC,GACjB,EAAKN,SAAS,CAAElB,WAAYwB,EAAMC,OAAOC,SA7B7C,4CAgCE,WAAU,IAAD,OACP,EAKIC,KAAKZ,MAJPhB,EADF,EACEA,WACAiB,EAFF,EAEEA,UACAlB,EAHF,EAGEA,SACAE,EAJF,EAIEA,UAGF,OACE,qBAAK4B,UAAU,MAAf,SAEGZ,EAEG,qCACE,sBAAKY,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SACpB,CAAE,YAAahC,IAAaJ,EAASe,UACvCsB,QAASJ,KAAKR,mBAJhB,iCAQA,wBACEU,KAAK,SACLD,UAAWE,IAAW,SACpB,CAAE,YAAahC,IAAaJ,EAASiB,SACvCoB,QAASJ,KAAKP,aAJhB,4BAQA,wBACES,KAAK,SACLD,UAAWE,IAAW,SAAU,CAAE,YAAa/B,IAC/CgC,QAASJ,KAAKN,eAHhB,qBAOA,wBACEQ,KAAK,SACLD,UAAU,SACVG,QAASJ,KAAKL,aAHhB,sBASF,8BACE,yBACEU,KAAK,SACLJ,UAAU,SACVF,MAAO1B,EACPiC,SAAU,SAAAP,GAAK,OAAI,EAAKH,gBAAgBG,IAJ1C,UAME,wBAAQA,MAAM,IAAIQ,QAAM,EAACC,UAAQ,EAAjC,oBACA,wBAAQT,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,qBAIJ,oBAAIE,UAAU,QAAd,SACGhC,EACCD,EACAG,EACAC,EACAC,GACAoC,KAAI,SAAAjC,GACJ,OACE,oBAAIyB,UAAU,cAAd,SAA6BzB,YAMrC,qBAAKyB,UAAU,UAAf,SACE,wBACEC,KAAK,SACLD,UAAU,SACVG,QAASJ,KAAKV,UAHhB,2BAnHd,GAAyBoB,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aeee5579.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  minLength: number,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods].filter(good => good.length > minLength);\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.NONE:\n        return 0;\n\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        throw new Error('invalid sorting type');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n  minLength: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n    minLength: 0,\n  };\n\n  startList = () => {\n    this.setState({ isStarted: true });\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseSorting = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  resetSorting = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE, minLength: 0 });\n  };\n\n  changeMinLength = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ minLength: +event.target.value });\n  };\n\n  render() {\n    const {\n      isReversed,\n      isStarted,\n      sortType,\n      minLength,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        {isStarted\n          ? (\n            <>\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  className={classNames('button',\n                    { 'is-active': sortType === SortType.ALPABET })}\n                  onClick={this.sortAlphabetically}\n                >\n                  Sort alphabetically\n                </button>\n                <button\n                  type=\"button\"\n                  className={classNames('button',\n                    { 'is-active': sortType === SortType.LENGTH })}\n                  onClick={this.sortByLength}\n                >\n                  Sort by length\n                </button>\n                <button\n                  type=\"button\"\n                  className={classNames('button', { 'is-active': isReversed })}\n                  onClick={this.reverseSorting}\n                >\n                  Reverse\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={this.resetSorting}\n                >\n                  Reset\n                </button>\n              </div>\n\n              <div>\n                <select\n                  name=\"select\"\n                  className=\"select\"\n                  value={minLength}\n                  onChange={value => this.changeMinLength(value)}\n                >\n                  <option value=\"0\" hidden selected>select</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                  <option value=\"6\">6</option>\n                  <option value=\"7\">7</option>\n                  <option value=\"8\">8</option>\n                  <option value=\"9\">9</option>\n                  <option value=\"10\">10</option>\n                </select>\n              </div>\n\n              <ul className=\"Goods\">\n                {getReorderedGoods(\n                  goodsFromServer,\n                  sortType,\n                  isReversed,\n                  minLength,\n                ).map(good => {\n                  return (\n                    <li className=\"Goods__item\">{good}</li>\n                  );\n                })}\n              </ul>\n            </>\n          ) : (\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={this.startList}\n              >\n                Start\n              </button>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}